name: Download uYou DEB

on:
  workflow_dispatch:
    inputs:
      UYOU_VERSION:
        description: 'uYou Version'
        required: true
        type: string

jobs:
  download:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager requests

    - name: Download file
      env:
        UYOU_VERSION: ${{ inputs.UYOU_VERSION }}
      run: |
        python3 <<< 'from selenium import webdriver
        from selenium.webdriver.chrome.service import Service
        from selenium.webdriver.chrome.options import Options
        from selenium.webdriver.support.ui import WebDriverWait
        from selenium.webdriver.support import expected_conditions as EC
        from webdriver_manager.chrome import ChromeDriverManager
        import os
        import time
        import requests

        def download_file():
            version = os.environ['UYOU_VERSION']
            url = f"https://miro92.com/repo/debs/com.miro.uyou_{version}_iphoneos-arm.deb"
            
            # Setup Chrome options
            chrome_options = Options()
            chrome_options.add_argument('--headless')
            chrome_options.add_argument('--no-sandbox')
            chrome_options.add_argument('--disable-dev-shm-usage')
            
            # Initialize the Chrome driver
            driver = webdriver.Chrome(
                service=Service(ChromeDriverManager().install()),
                options=chrome_options
            )
            
            try:
                # Visit the page
                driver.get(url)
                
                # Wait for Cloudflare check (at least 5 seconds)
                time.sleep(7)
                
                # Get cookies from Selenium
                selenium_cookies = driver.get_cookies()
                
                # Convert Selenium cookies to requests cookies
                cookies = {cookie['name']: cookie['value'] for cookie in selenium_cookies}
                
                # Download the file using requests
                response = requests.get(url, cookies=cookies, allow_redirects=True)
                
                if response.status_code == 200:
                    filename = f"com.miro.uyou_{version}_iphoneos-arm.deb"
                    with open(filename, 'wb') as f:
                        f.write(response.content)
                    print(f"Successfully downloaded {filename}")
                else:
                    raise Exception(f"Failed to download file: Status code {response.status_code}")
                    
            finally:
                driver.quit()

        if __name__ == "__main__":
            download_file()'


    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: uyou-deb
        path: ./*.deb
